version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: echo "BUILD START..."
      - run: git clone --branch 3.0 https://github.com/secretescapes/grails-petclinic
      - run: cd grails-petclinic && ./grailsw war
      - store_artifacts:
          path: grails-petclinic/target/petclinic-3.0.war
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: grails-petclinic/target
          # Must be relative path from root
          paths:
            - petclinic-3.0.war

  test:
    docker:
      - image: circleci/python:2.7
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/target
      - run: sudo pip install ansible
    #  - run: cp /tmp/target/petclinic-3.0.war target/petclinic.war
      - run: ansible-playbook -i tests/testinventory tests/test.yml -vv --syntax-check --extra-vars "path_to_war=petclinic-3.0.war"
      - run: ansible-playbook -i tests/testinventory tests/test.yml -vvv --connection=local --sudo --extra-vars "path_to_war=petclinic-3.0.war"
      - run: curl --insecure -s -o /dev/null -w "%{http_code}" http://localhost:80 | grep -q '200' && (echo 'Status 200' && exit 0) || (echo 'Fail' && exit 1)

  deploy:
    docker:
    - image: circleci/python:2.7
    steps:
       - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/target
      - run: sudo pip install ansible
      - run: ansible-playbook -i hosts deploy.yml --private-key ?? --extra-vars "path_to_war=petclinic-3.0.war"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test